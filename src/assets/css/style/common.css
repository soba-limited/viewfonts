@charset 'UTF-8';

@import url('https://use.typekit.net/lva6bsy.css');

@import url('https://fonts.googleapis.com/css2?family=Fjalla+One&display=swap');

@import url('https://fonts.googleapis.com/css2?family=M+PLUS+Rounded+1c:wght@400;

500;700;900&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Noto+Sans+JP:wght@400;700;900&display=swap');
.scroll-prevent {
  /*動き固定*/
  position: absolute;
  /*奥行きを管理*/
  z-index: -1;
  /*下2つで背景を元のサイズのまま表示することができる*/
  width: 100%;
  height: 100%;
}

body,
html {
  width: 100%;
}

body {
  scroll-behavior: smooth;
}

* {
  font-family: 'Noto Sans JP', -apple-system, BlinkMacSystemFont, Roboto, 'Segoe UI', 'Helvetica Neue', HelveticaNeue, YuGothic, 'Yu Gothic Medium', 'Yu Gothic', Verdana, Meiryo, sans-serif;
  font-size: 1.6rem;
  line-height: 1.8;
}

a,
span {
  font-family: inherit;
  font-size: inherit;
  color: inherit;
}

h1,
h2,
h3,
h4 {
  font-weight: 400;
}

a {
  text-decoration: none;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
}

ul {
  list-style: none;
}

svg {
  width: 100%;
  height: auto;
}

img {
  display: block;
  max-width: 100%;
}

img.wp-post-image {
  max-width: 100%;
  height: auto !important;
}

.add_toggle {
  font-size: 2rem;
  font-weight: 100;
  position: sticky;
  z-index: 100;
  bottom: 30px;
  left: calc(100vw - 110px);
  width: 60px;
  height: 60px;
  transition: ease .5s all;
  border: 1px solid #333;
}

.add_toggle.active {
  -webkit-transform: rotate(405deg);
  transform: rotate(405deg);
  border-radius: 50%;
}

section.add_wrap {
  position: fixed;
  z-index: 10;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  transition: ease .5s all;
  -webkit-transform: translateY(-100%);
  transform: translateY(-100%);
  background: rgba(255, 255, 255, .8);
}

section.add_wrap .inner_wrap {
  position: absolute;
  top: 50%;
  left: 50%;
  overflow: auto;
  width: 640px;
  max-width: 90vw;
  height: 840px;
  max-height: 90vh;
  padding: 80px;
  -webkit-transform: translate(-50%, -50%);
  transform: translate(-50%, -50%);
  opacity: 1;
  opacity: 0;
  background: white;
  box-shadow: 0 8px 20px rgba(0, 0, 0, .1);
}

section.add_wrap.active {
  -webkit-transform: translateY(0);
  transform: translateY(0);
}

section.add_wrap.active .inner_wrap {
  transition: ease .5s all .5s;
  opacity: 1;
}

section.add_wrap .add_title {
  font-weight: bold;
  margin-top: 30px;
}

section.add_wrap .add_title:first-of-type {
  margin-top: 0;
}

section.add_wrap .input {
  margin-top: 16px;
}

section.add_wrap .input input,
section.add_wrap .input textarea {
  font-size: 1.3rem;
  width: 80%;
  min-width: 240px;
  padding: 10px;
  border: 1px solid #ccc;
}

section.add_wrap .input select {
  width: 80%;
  min-width: 240px;
  padding: 6px 20px;
  border: 1px solid #ccc;
  outline: none;
}

section.add_wrap .input select:focus {
  outline: none;
}

section.add_wrap .addarray {
  display: block;
  width: 240px;
  margin-top: 30px;
  padding: 15px;
  text-align: center;
  color: white;
  background: #ab4646;
}

footer {
  margin-top: 80px;
  padding: 30px 15px;
  text-align: center;
  background: #ab4646;
}

footer p {
  color: white;
}

header {
  position: sticky;
  position: relative;
  z-index: 10;
  top: 0;
  width: 100%;
  padding: 20px;
  background: #ab4646;
}

header .h_flex {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: center;
}

header h1 {
  font-size: 3.2rem;
  color: white;
}

header .toggle_button {
  width: 50px;
  height: 50px;
}

header .toggle_button button {
  position: relative;
  display: block;
  width: 100%;
  height: 100%;
}

header .toggle_button .bar {
  position: absolute;
  left: 6px;
  width: calc(100% - 12px);
  height: 2px;
  background: white;
}

header .toggle_button .bar:first-of-type {
  top: 20px;
}

header .toggle_button .bar:last-of-type {
  top: 30px;
}

section.single {
  position: relative;
  width: 1000px;
  max-width: 100%;
  margin: 50px auto 0;
  padding: 0 15px;
}

section.single button.remove {
  font-size: 1rem;
  position: absolute;
  top: 16px;
  right: 20px;
  display: flex;
  flex-direction: row;
  width: 20px;
  height: 20px;
  border: 1px solid #333;
  border-radius: 50%;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
}

section.single > article {
  margin-top: 30px;
}

section.single h2 {
  font-size: 2.4rem;
  margin-bottom: 14px;
  color: #ab4646;
  border-bottom: 1px solid #ab4646;
}

section.single .write-area {
  margin-top: 30px;
}

section.single .text {
  line-height: 1.5;
  margin-top: 10px;
  color: #333;
}

p.noto {
  font-family: 'Noto Sans JP', sans-serif;
}

p.yugo {
  font-family: YuGothic, 'Yu Gothic Medium', 'Yu Gothic', sans-serif;
}

p.yumin {
  font-family: 'YuMincho', 'Yu Mincho', sefif;
}

section.single input[type=text],
section.single input[type=number],
section.single textarea {
  font-size: 1.3rem;
  padding: 10px;
  border: 1px solid #ccc;
}

section.single .input_wrap {
  display: flex;
  flex-direction: row;
  width: 100%;
  flex-wrap: wrap;
  justify-content: space-between;
  align-items: stretch;
}

section.single .text-input {
  flex-basis: 640px;
}

section.single .text-input input,
section.single .text-input textarea {
  width: 100%;
}

section.single .color-input input {
  display: block;
  height: 45px;
}

section.single .family-input {
  width: 300px;
  margin-top: 20px;
}

section.single .family-input select {
  width: 100%;
  padding: 6px 20px;
  border: 1px solid #ccc;
  border-radius: 30px;
  outline: none;
}

section.single .family-input select:focus {
  outline: none;
}

section.single .weight-input {
  width: 300px;
  margin-top: 20px;
  margin-right: auto;
  margin-left: 30px;
}

section.single .weight-input select {
  width: 100%;
  padding: 6px 20px;
  border: 1px solid #ccc;
  border-radius: 30px;
  outline: none;
}

section.single .weight-input select:focus {
  outline: none;
}

section.view_wrap {
  width: 1000px;
  max-width: 100%;
  margin: 50px auto 0;
  padding: 0 15px;
  padding: 60px;
  background: #f0f0f0;
}

section.view_wrap .select_view {
  display: flex;
  flex-direction: row;
  flex-wrap: wrap;
  justify-content: flex-start;
  align-items: stretch;
}

section.view_wrap .c-single {
  position: relative;
  width: 200px;
  margin-right: 12px;
  margin-bottom: 8px;
}

section.view_wrap .c-single input[type=checkbox] {
  position: absolute;
  opacity: 0;
}

section.view_wrap .c-single label {
  display: block;
  width: 100%;
  padding: 8px;
  text-align: center;
  color: #ab4646;
  border: 1px solid #ab4646;
  border-radius: 30px;
  background: inherit;
}

section.view_wrap .c-single input:checked + label {
  color: white;
  background: #ab4646;
}

section.view_wrap article.text_view {
  margin-top: 30px;
  padding: 40px;
  background: white;
}

@media only screen and (min-width: 768px) {
  .sp {
    display: none !important;
  }
}

@media only screen and (min-width: 1024px) {
  .sp3 {
    display: none !important;
  }
}

@media only screen and (min-width: 1366px) {
  .tab {
    display: none !important;
  }
}

@media only screen and (max-width: 1365px) {
  .pc2 {
    display: none !important;
  }
}

@media only screen and (max-width: 1023px) {
  * {
    font-size: 1.6rem;
  }

  .pc3 {
    display: none !important;
  }
}

@media only screen and (max-width: 767px) {
  * {
    font-size: 1.4rem;
  }

  .pc {
    display: none !important;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
